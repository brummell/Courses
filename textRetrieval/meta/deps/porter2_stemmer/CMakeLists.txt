cmake_minimum_required(VERSION 2.8.11)
project(porter2-stemmer)

option(USE_LIBCXX "Use libc++ for the C++ standard library" ON)

if(UNIX)
    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -Wall -pedantic")
    if("${CMAKE_CXX_COMPILER_ID}" STREQUAL "Clang")
        if(USE_LIBCXX)
            message("-- Locating libc++...")
            find_library(LIBCXX_LIBRARY NAMES c++ cxx)
            if(LIBCXX_LIBRARY)
                message("-- Located libc++, using it.")
                set(LIBCXX_OPTIONS "-stdlib=libc++")
                message("--     Locating libc++'s abi...")
                find_library(LIBCXXABI_LIBRARY NAMES c++abi)
                find_library(LIBCXXRT_LIBRARY NAMES cxxrt)
                if(LIBCXXABI_LIBRARY)
                    message("--     Found libc++abi, using it.")
                    set(CXXABI_LIBRARY ${LIBCXXABI_LIBRARY})
                elseif(LIBCXXRT_LIBRARY)
                    message("--     Found libcxxrt, using it.")
                    set(CXXABI_LIBRARY ${LIBCXXRT_LIBRARY})
                else()
                    message("--     No abi library found. "
                            "Attempting to continue without one...")
                endif()
            else()
                message("-- Could not find libc++, will not use it.")
            endif()
        endif()
    endif()
endif()

add_library(porter2-stemmer porter2_stemmer.cpp)
target_include_directories(porter2-stemmer PUBLIC ${PROJECT_SOURCE_DIR})
target_compile_options(porter2-stemmer PRIVATE -std=c++11 PUBLIC ${LIBCXX_OPTIONS})
target_link_libraries(porter2-stemmer ${LIBCXX_LIBRARY} ${CXXABI_LIBRARY})

add_executable(stem main.cpp)
target_link_libraries(stem porter2-stemmer)
